rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

  	match /home/{section} {
    	allow read;
    	allow write: if isAdmin();
    }
    
    match /stores/{section} {
    	allow read;
    	allow write: if isAdmin();
    }
    
    match /aux/{doc} {
    	allow read, write: if request.auth != null;
    }
    
    match /orders/{order} {
    	allow delete: if false;
      allow create: if request.auth != null;
      allow update: if isAdmin();
      allow read: if isAdmin() || (request.auth != null && request.auth.uid == resource.data.userId);
    }
    
    match /admins/{admin} {
    	allow read;
      allow write: if isAdmin();
    }
    
    match /users/{user=**} {
    	allow read, write: if (request.auth != null && request.auth.uid == user) || isAdmin();
      
      match /tokens/{token} {
      	allow read, write: if (request.auth != null && request.auth.uid == user) || isAdmin();
      }
      
      match /cart/{doc} {
      	allow read, write: if (request.auth != null && request.auth.uid == user) || isAdmin();
      }
    }
    
    match /products/{product} {
    	allow read;
      allow create: if isAdmin();
      allow delete: if false;
      allow update: if isAdmin() || request.auth != null && sameProduct(request.resource, get(/databases/$(database)/documents/$(product)));
    }
    
    function isAdmin() {
    	return request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    function sameProduct(p, n) {
    	return p.data.name == n.data.name && p.data.description == n.data.description && p.data.deleted == n.data.deleted && p.data.images == n.data.images;
    }
    
  }
}